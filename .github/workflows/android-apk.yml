# GitHub Actions workflow to build the Android APK using Buildozer (Dockerized)
# Triggers:
#  - Manual via "Run workflow"
#  - On changes under android_app/ or this workflow file
name: Build Android APK

on:
  workflow_dispatch:
  push:
    paths:
      - "android_app/**"
      - ".github/workflows/android-apk.yml"

concurrency:
  group: build-android-apk-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache Buildozer and Python-for-Android artifacts to speed up subsequent builds
      - name: Cache buildozer artifacts
        uses: actions/cache@v4
        with:
          path: |
            android_app/.buildozer
            ~/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('android_app/buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      # Use the official Buildozer action (Docker-based) so the environment is consistent
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git zip unzip rsync curl wget \
            openjdk-17-jdk python3-pip python3-venv \
            autoconf libtool pkg-config gperf ccache \
            libffi-dev libssl-dev zlib1g-dev libsqlite3-dev libbz2-dev liblzma-dev \
            libncurses-dev cmake

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Buildozer in Python 3.11 venv
        run: |
          python3.11 -m venv ~/.venvs/buildozer
          ~/.venvs/buildozer/bin/python -m pip install --upgrade pip setuptools wheel
          ~/.venvs/buildozer/bin/pip install --upgrade buildozer Cython virtualenv
          ~/.venvs/buildozer/bin/python -V
          ~/.venvs/buildozer/bin/buildozer --version
          ~/.venvs/buildozer/bin/cython --version || true

      - name: Verify toolchain versions
        run: |
          java -version
          javac -version
          echo "which git: $(which git)"
          echo "which cmake: $(which cmake)"
          echo "which pkg-config: $(which pkg-config)"
          echo "which autoconf: $(which autoconf)"
          echo "which libtool: $(which libtool || true)"
          echo "python3: $(python3 -V)"
          echo "Runner OS: $RUNNER_OS"

      - name: Build APK (android debug)
        working-directory: android_app
        env:
          GRADLE_OPTS: -Xmx4096m -Dorg.gradle.jvmargs=-Xmx4096m
        run: |
          export PATH="$HOME/.venvs/buildozer/bin:$PATH"
          cython --version || true
          ~/.venvs/buildozer/bin/buildozer android debug

      # Upload any produced APK(s) as artifacts
      - name: Upload APK artifact(s)
        uses: actions/upload-artifact@v4
        with:
          name: DriveBy-APK
          path: |
            android_app/bin/*.apk
            android_app/.buildozer/android/platform/build-*/dists/*/bin/*.apk
          if-no-files-found: warn

      # Always upload logs for inspection (even on failure)
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            android_app/.buildozer/**/*.log
            android_app/build_logs/**/*.log
          if-no-files-found: ignore
